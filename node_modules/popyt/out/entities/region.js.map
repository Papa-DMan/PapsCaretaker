{"version":3,"sources":["../src/entities/region.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,MAAM;IA8CjB,YAAa,OAAgB,EAAE,IAAS;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAClB,CAAC;IAED;;OAEG;IACK,KAAK,CAAE,IAAS;QACtB,IAAI,IAAI,CAAC,IAAI,KAAK,oBAAoB,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,wBAAwB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;SACrD;QAED,MAAM,MAAM,GAAG,IAAI,CAAA;QAEnB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAA;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,0BAA0B;QAC1B,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE,CAAA;YAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;SAChC;aAAM;YACL,0BAA0B;YAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAA;SAClB;IACH,CAAC;;AA1EH,wBA2EC;AA1EC;;GAEG;AACW,eAAQ,GAAG,aAAa,CAAA;AAEtC;;GAEG;AACW,WAAI,GAAG,SAAS,CAAA;AAE9B;;GAEG;AACW,aAAM,GAAG,iCAAiC,CAAA","file":"region.js","sourcesContent":["import YouTube from '..'\n\n/**\n * A region.\n */\nexport class Region {\n  /**\n   * The name of the endpoint used for this entity.\n   */\n  public static endpoint = 'i18nRegions'\n\n  /**\n   * The parts to request for this entity.\n   */\n  public static part = 'snippet'\n\n  /**\n   * The fields to request for this entity.\n   */\n  public static fields = 'items(kind,id,snippet(gl,name))'\n\n  /**\n   * The YouTube object that created this language object.\n   */\n  public youtube: YouTube\n\n  /**\n   * Whether or not this is a full language object.\n   */\n  public full: boolean\n\n  /**\n   * The raw data of this language.\n   */\n  public data: any\n\n  /**\n   * The ID of this language.\n   */\n  public id: string\n\n  /**\n   * The country code that uniquely identifies the region.\n   */\n  public gl: string\n\n  /**\n   * The region's name.\n   */\n  public name: string\n\n  constructor (youtube: YouTube, data: any) {\n    this.youtube = youtube\n    this.data = data\n\n    this._init(data)\n  }\n\n  /**\n   * @ignore\n   */\n  private _init (data: any) {\n    if (data.kind !== 'youtube#i18nRegion') {\n      throw new Error(`Invalid region type: ${data.kind}`)\n    }\n\n    const region = data\n\n    this.id = region.id\n    this.full = true\n\n    /* istanbul ignore next */\n    if (region.snippet) {\n      this.gl = region.snippet.gl\n      this.name = region.snippet.name\n    } else {\n      /* istanbul ignore next */\n      this.full = false\n    }\n  }\n}\n"],"sourceRoot":"../../src"}