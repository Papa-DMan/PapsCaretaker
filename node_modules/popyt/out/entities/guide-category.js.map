{"version":3,"sources":["../src/entities/guide-category.ts"],"names":[],"mappings":";AAAA,0BAA0B;;;;;;;;;;;;AAI1B;;;GAGG;AACH,MAAa,aAAa;IA8CxB,YAAa,OAAgB,EAAE,IAAS;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAClB,CAAC;IAED;;OAEG;IACK,KAAK,CAAE,IAAS;QACtB,IAAI,IAAI,CAAC,IAAI,KAAK,uBAAuB,EAAE;YACzC,MAAM,IAAI,KAAK,CAAC,gCAAgC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;SAC7D;QAED,MAAM,QAAQ,GAAG,IAAI,CAAA;QAErB,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAA;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,0BAA0B;QAC1B,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAA;YAC3C,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAA;SACpC;aAAM;YACL,0BAA0B;YAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAA;SAClB;IACH,CAAC;IAED;;;OAGG;IACU,KAAK;;YAChB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YAC7D,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;QACtC,CAAC;KAAA;IAED;;OAEG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAChD,CAAC;;AA1FH,sCA2FC;AA1FC;;GAEG;AACW,sBAAQ,GAAG,iBAAiB,CAAA;AAE1C;;GAEG;AACW,kBAAI,GAAG,SAAS,CAAA;AAE9B;;GAEG;AACW,oBAAM,GAAG,yCAAyC,CAAA","file":"guide-category.js","sourcesContent":["/* istanbul ignore file */\n\nimport YouTube from '..'\n\n/**\n * A YouTube guide category.\n * @deprecated See https://developers.google.com/youtube/v3/docs/guideCategories\n */\nexport class GuideCategory {\n  /**\n   * The name of the endpoint used for this entity.\n   */\n  public static endpoint = 'guideCategories'\n\n  /**\n   * The parts to request for this entity.\n   */\n  public static part = 'snippet'\n\n  /**\n   * The fields to request for this entity.\n   */\n  public static fields = 'items(kind,id,snippet(channelId,title))'\n\n  /**\n   * The YouTube object that created this category object.\n   */\n  public youtube: YouTube\n\n  /**\n   * Whether or not this is a full category object.\n   */\n  public full: boolean\n\n  /**\n   * The raw data of this category.\n   */\n  public data: any\n\n  /**\n   * The ID of this category.\n   */\n  public id: string\n\n  /**\n   * The [[Channel]] associated with the category.\n   */\n  public channelId: string\n\n  /**\n   * The category's title.\n   */\n  public title: string\n\n  constructor (youtube: YouTube, data: any) {\n    this.youtube = youtube\n    this.data = data\n\n    this._init(data)\n  }\n\n  /**\n   * @ignore\n   */\n  private _init (data: any) {\n    if (data.kind !== 'youtube#guideCategory') {\n      throw new Error(`Invalid guide category type: ${data.kind}`)\n    }\n\n    const category = data\n\n    this.id = category.id\n    this.full = true\n\n    /* istanbul ignore next */\n    if (category.snippet) {\n      this.channelId = category.snippet.channelId\n      this.title = category.snippet.title\n    } else {\n      /* istanbul ignore next */\n      this.full = false\n    }\n  }\n\n  /**\n   * Fetches this category and reassigns this object to the new category object.\n   * Only useful if `this.full` is false, or if you want updated category info.\n   */\n  public async fetch () {\n    const category = await this.youtube.getGuideCategory(this.id)\n    return Object.assign(this, category)\n  }\n\n  /**\n   * Fetches the channel associated with this category.\n   */\n  public getChannel () {\n    return this.youtube.getChannel(this.channelId)\n  }\n}\n"],"sourceRoot":"../../src"}