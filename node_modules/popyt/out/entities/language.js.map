{"version":3,"sources":["../src/entities/language.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,QAAQ;IA8CnB,YAAa,OAAgB,EAAE,IAAS;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAClB,CAAC;IAED;;OAEG;IACK,KAAK,CAAE,IAAS;QACtB,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,0BAA0B,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;SACvD;QAED,MAAM,QAAQ,GAAG,IAAI,CAAA;QAErB,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAA;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,0BAA0B;QAC1B,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAA;YAC7B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAA;SAClC;aAAM;YACL,0BAA0B;YAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAA;SAClB;IACH,CAAC;;AA1EH,4BA2EC;AA1EC;;GAEG;AACW,iBAAQ,GAAG,eAAe,CAAA;AAExC;;GAEG;AACW,aAAI,GAAG,SAAS,CAAA;AAE9B;;GAEG;AACW,eAAM,GAAG,iCAAiC,CAAA","file":"language.js","sourcesContent":["import YouTube from '..'\n\n/**\n * A language.\n */\nexport class Language {\n  /**\n   * The name of the endpoint used for this entity.\n   */\n  public static endpoint = 'i18nLanguages'\n\n  /**\n   * The parts to request for this entity.\n   */\n  public static part = 'snippet'\n\n  /**\n   * The fields to request for this entity.\n   */\n  public static fields = 'items(kind,id,snippet(hl,name))'\n\n  /**\n   * The YouTube object that created this language object.\n   */\n  public youtube: YouTube\n\n  /**\n   * Whether or not this is a full language object.\n   */\n  public full: boolean\n\n  /**\n   * The raw data of this language.\n   */\n  public data: any\n\n  /**\n   * The ID of this language.\n   */\n  public id: string\n\n  /**\n   * The language code that uniquely identifies the language.\n   */\n  public hl: string\n\n  /**\n   * The language's name.\n   */\n  public name: string\n\n  constructor (youtube: YouTube, data: any) {\n    this.youtube = youtube\n    this.data = data\n\n    this._init(data)\n  }\n\n  /**\n   * @ignore\n   */\n  private _init (data: any) {\n    if (data.kind !== 'youtube#i18nLanguage') {\n      throw new Error(`Invalid language type: ${data.kind}`)\n    }\n\n    const language = data\n\n    this.id = language.id\n    this.full = true\n\n    /* istanbul ignore next */\n    if (language.snippet) {\n      this.hl = language.snippet.hl\n      this.name = language.snippet.name\n    } else {\n      /* istanbul ignore next */\n      this.full = false\n    }\n  }\n}\n"],"sourceRoot":"../../src"}