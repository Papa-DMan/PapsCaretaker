{"version":3,"sources":["../src/entities/video-abuse-report-reason.ts"],"names":[],"mappings":";AAAA,0BAA0B;AAC1B,WAAW;;;AAIX;;GAEG;AACH,MAAa,sBAAsB;IA8CjC,YAAa,OAAgB,EAAE,IAAS;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAClB,CAAC;IAED;;OAEG;IACK,KAAK,CAAE,IAAS;QACtB,IAAI,IAAI,CAAC,IAAI,KAAK,gCAAgC,EAAE;YAClD,MAAM,IAAI,KAAK,CAAC,2CAA2C,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;SACxE;QAED,MAAM,MAAM,GAAG,IAAI,CAAA;QAEnB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAA;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAEhB,0BAA0B;QAC1B,IAAI,MAAM,CAAC,OAAO,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAA;YACjC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAA;SACxD;aAAM;YACL,0BAA0B;YAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAA;SAClB;IACH,CAAC;;AA1EH,wDA2EC;AA1EC;;GAEG;AACW,+BAAQ,GAAG,yBAAyB,CAAA;AAElD;;GAEG;AACW,2BAAI,GAAG,YAAY,CAAA;AAEjC;;GAEG;AACW,6BAAM,GAAG,gDAAgD,CAAA","file":"video-abuse-report-reason.js","sourcesContent":["/* istanbul ignore file */\n/* OAuth */\n\nimport YouTube from '..'\n\n/**\n * A YouTube [[Video]] abuse report reason.\n */\nexport class VideoAbuseReportReason {\n  /**\n   * The name of the endpoint used for this entity.\n   */\n  public static endpoint = 'videoAbuseReportReasons'\n\n  /**\n   * The parts to request for this entity.\n   */\n  public static part = 'id,snippet'\n\n  /**\n   * The fields to request for this entity.\n   */\n  public static fields = 'items(kind,id,snippet(label,secondaryReasons))'\n\n  /**\n   * The YouTube object that created this reason object.\n   */\n  public youtube: YouTube\n\n  /**\n   * Whether or not this is a full reason object.\n   */\n  public full: boolean\n\n  /**\n   * The raw data of this reason.\n   */\n  public data: any\n\n  /**\n   * The ID of this reason.\n   */\n  public id: string\n\n  /**\n   * The label text of this reason.\n   */\n  public label: string\n\n  /**\n   * A list of secondary reasons associated with the reason, if any are available.\n   */\n  public secondaryReasons: { id: string; label: string }[]\n\n  constructor (youtube: YouTube, data: any) {\n    this.youtube = youtube\n    this.data = data\n\n    this._init(data)\n  }\n\n  /**\n   * @ignore\n   */\n  private _init (data: any) {\n    if (data.kind !== 'youtube#videoAbuseReportReason') {\n      throw new Error(`Invalid video abuse report reason type: ${data.kind}`)\n    }\n\n    const reason = data\n\n    this.id = reason.id\n    this.full = true\n\n    /* istanbul ignore next */\n    if (reason.snippet) {\n      this.label = reason.snippet.label\n      this.secondaryReasons = reason.snippet.secondaryReasons\n    } else {\n      /* istanbul ignore next */\n      this.full = false\n    }\n  }\n}\n"],"sourceRoot":"../../src"}